@using FoodJournal.Application.Entities
@using FoodJournal.Application.Repositories
@inject IFoodRepository FoodRepository

<EditForm Model="Input" OnValidSubmit="HandleValidSubmit">
    <div class="mb-6">
        <label for="Input.Name" class="mb-2 text-sm font-medium text-white sr-only">New food</label>
        <div class="relative">
            <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none text-gray-400">
                <span class="material-symbols-outlined">add</span>
            </div>
            <InputText @bind-Value="Input.Name" id="Input.Name" class="block w-full p-4 ps-10 text-sm placeholder-gray-400 text-white border border-gray-600 rounded-lg bg-gray-700 focus:ring-blue-500 focus:border-blue-500" placeholder="New food" required />
            <button type="submit" class="text-white absolute end-2.5 bottom-2.5 bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-800 font-medium rounded-lg text-sm px-4 py-2">Add</button>
        </div>
    </div>
</EditForm>

@code {
    public CreateFood Input = new();

    public class CreateFood
    {
        public string Name { get; set; } = string.Empty;
    }

    private async Task HandleValidSubmit()
    {
        var food = new Food(Guid.CreateVersion7(), Input.Name, "");

        var result = await FoodRepository.CreateAsync(food, CancellationToken.None);
    }
}
